apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'kotlinx-serialization'

def keystorePropertiesFile = rootProject.file("buildsystem/keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

android {
    signingConfigs {

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 28

    defaultConfig {
        applicationId "com.carlos.grabredenvelope"
        minSdkVersion 18
        targetSdkVersion 28
        versionCode 5
        versionName "2.0.0"
        flavorDimensions "6" //和versionCode相同
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : localProperties.getProperty('JPUSH_APPKEY'), //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

        }
        debug {
            signingConfig signingConfigs.release

        }
    }

    //多渠道打包
    productFlavors {
        dev {          //开发测试版本
            manifestPlaceholders = [
                    UMENG_APPKEY: localProperties.getProperty('UMENG_APPKEY_DEV'),
            ]
        }
        production {   //正式发布版本
            manifestPlaceholders = [
                    UMENG_APPKEY: localProperties.getProperty('UMENG_APPKEY'),
            ]
        }
    }

}

greendao {
    schemaVersion 1//数据库版本号
    daoPackage 'com.carlos.grabredenvelope.db'//设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    //targetGenDirTest：设置生成单元测试目录
    //generateTests：设置自动生成单元测试用例
}


//修改APK名字
android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "QiangHongBao_${versionName}.apk"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestApi 'androidx.test:runner:1.1.0-alpha4'
    androidTestApi 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.1'

    implementation 'com.github.xbdcc:Cutils:0.0.10'

    //jpush
    implementation 'cn.jiguang.sdk:jpush:3.1.8'
    implementation 'cn.jiguang.sdk:jcore:1.2.7'

    //umeng
    implementation 'com.umeng.umsdk:analytics:8.0.0'
    implementation 'com.umeng.umsdk:common:2.0.0'

    //bugly
    implementation 'com.tencent.bugly:crashreport:2.8.6'

    //greendao
    implementation 'org.greenrobot:greendao:3.2.2'

    //bmob
    implementation 'cn.bmob.android:bmob-sdk:3.6.9'
    implementation "io.reactivex.rxjava2:rxjava:2.2.2"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.squareup.okio:okio:2.1.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    androidTestImplementation 'junit:junit:4.12'

}
repositories {
    mavenCentral()
}
